--Escreva uma consulta SQL para selecionar o departamento_id e a soma dos salários para cada departamento. Filtre os departamentos onde a soma total dos salários é maior que R$ 12.000,00.
USE empresa_jeferson;

SELECT departamentos.localizacao, SUM(cargos.salario)
FROM empregados
JOIN cargos ON empregados.titulo = cargos.titulo
JOIN departamento ON empregados.departamento_id = departamentos.departamento_id
GROUP BY (cargos.salario) > 12000.00;

--Escreva uma consulta SQL para selecionar o titulo e o número de empregados para cada título. Filtre os títulos onde há mais de 2 empregados.

--Escreva uma consulta SQL para selecionar o departamento_id e a média dos salários para cada departamento. Filtre os departamentos onde a média salarial é maior que R$ 4.500,00.

--Escreva uma consulta SQL para selecionar o departamento_id e o maior salário para cada departamento. Filtre os departamentos onde o maior salário é superior a R$ 6.000,00.

--Escreva uma consulta SQL para selecionar o departamento_id e o menor salário para cada departamento. Filtre os departamentos onde o menor salário é superior a R$ 2.500,00.





--Delimiter
 USE empresa_jeferson;


 CREATE PROCEDURE AumentarSalario(IN dep_id INT, IN percentual DECIMAL(5,2))
 BEGIN
 UPDATE cargos
 SET salario = salario + (salario * (percentual / 100))
 WHERE departamento_id = dep_id;
 END 


 -- CRIE UM PROCEDIMENTO QUE DIMINUI O SALÁRIO DE UM DEPARTAMENTO EM UM VALOR X.
 USE empresa_jeferson;

  DELIMITER $$
  CREATE PROCEDURE DiminuirSalarioDepartamento (
    IN departamento INT,
    IN valor DECIMAL (10, 2)
  )
  BEGIN
  UPDATE funcionarios
  SET salario = salario - valor
  WHERE departamento_id = departamento;
 END

 -- CRIE UM PROCEDIMENTO QUE ATUALIZA O TÍTULO DE UM EMPREGADO ESPECIFICO PARA UM NOVO TÍTULO FORNECIDO.
 USE empresa_jeferson;

CREATE PROCEDURE AtualizarTituloEmpregado(
    IN emp_id INT,
    IN novo_titulo VARCHAR(50)
)
BEGIN
    UPDATE empregados
    SET titulo = novo_titulo
    WHERE id = departamento_id;
END;


-- Outra versão
USE empresa_jeferson;

 DECLARE titulo_existe INT; -- AQUI DECLARO UMA VARIÁVEL

USE empresa_jeferson;
 SELECT COUNT (*)
 INTO titulo_existe
 FROM cargos
 WHERE titulo = novo_titulo;

USE empresa_jeferson;
 
 IF titulo_existe > 0 THEN
   UPDATE empregados
   SET titulo = novo_titulo
   WHERE empregados_id = emp_id;
   END IF;
   END 
    
 -- CRIE UM PROCEDIMENTO QUE TRANSFERE UM EMPREGADO DE UM DEPARTAMENTO PARA OUTRO.
 USE empresa_jeferson;
 
 DELIMITER //

CREATE PROCEDURE TransferirEmpregado(
    IN p_empregado_id INT,
    IN p_novo_departamento_id INT
)
BEGIN
    DECLARE v_departamento_existe INT;

    -- Verificar se o novo departamento existe
    SELECT COUNT(*) INTO v_departamento_existe
    FROM departamentos
    WHERE id = p_novo_departamento_id;

    IF v_departamento_existe = 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Departamento não encontrado';
    ELSE
        -- Atualizar o departamento do empregado
        UPDATE empregados
        SET departamento_id = p_novo_departamento_id
        WHERE id = p_empregado_id;

        IF ROW_COUNT() = 0 THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Empregado não encontrado';
        END IF;
    END IF;
END //

DELIMITER ;

USE empresa_jeferson;

DELIMITER //
CREATE FUNCTION CalcularSalarioBruto(
    emp_id INT
)
RETURNS DECIMAL(10,2)
BEGIN
    DECLARE salario1 DECIMAL(10,2);

    -- Obtém o salário do cargo do empregado com o ID fornecido
    SELECT cargos.salario 
    INTO salario1
    FROM empregados
    JOIN cargos ON empregados.titulo = cargos.titulo AND empregados.departamento_id = cargos.departamento_id
    WHERE empregados.empregados_id = emp_id;

    -- Retorna o salário
    RETURN salario1;
END //
DELIMITER ;



SELECT nome, CalcularSalarioBruto(empregados_id) AS salario_bruto
FROM empregados
WHERE empregados_id = 1;



--Exercício 1: Função para Calcular Salário Anual
--Crie uma função que, dado o ID de um cargo, retorne o salário anual correspondente ao cargo.

USE empresa_jeferson;
DELIMITER //
CREATE FUNCTION CalcularSalarioAnual(
    cargo_id INT
)
RETURNS DECIMAL(10,2)
BEGIN
    DECLARE CalcularSalarioAnual DECIMAL(10,2);

    SELECT cargos.salario 
    INTO CalcularSalarioAnual
    FROM empregados
    JOIN cargos ON empregados.titulo = cargos.titulo AND empregados.departamento_id = cargos.departamento_id
    WHERE empregados.empregados_id = emp_id;

    RETURN CalcularSalarioAnual;
END //
DELIMITER ;



--Exercício 2: Função para Contar Empregados por Departamento
--Crie uma função que, dado o ID de um departamento, retorne o número de empregados que trabalham nesse departamento.

USE empresa_jeferson;
DELIMITER //
CREATE FUNCTION EmpregadosPorDepartamento(
    departamento_id INT
)
RETURNS DECIMAL(10,2)
BEGIN
    DECLARE EmpregadosPorDepartamento DECIMAL(10,2);

    SELECT departamento.nome
    INTO EmpregadosPorDepartamento
    FROM empregados
    JOIN cargos ON empregados.titulo = nome.titulo AND empregados.departamento_id = nome.departamento_id
    WHERE empregados.empregados_id = emp_id;

    RETURN CalcularSalarioAnual;
END //
DELIMITER ;

USE empresa_jeferson;

CREATE FUNCTION contar_empregados_departamento(departamento_id INT)
RETURNS INT
AS
BEGIN
    DECLARE NumeroEmpregados INT;

    SELECT NumeroEmpregados = COUNT(*)
    FROM empregado
    WHERE departamento_id = departamento_id;

    RETURN NumeroEmpregados;
END;

SELECT contar_empregados_departamento(1); 

--Exercício 3: Função para Obter Nome do Departamento
--Crie uma função que, dado o ID de um departamento, retorne o nome do departamento.

USE empresa_jeferson;

CREATE FUNCTION obter_nome_departamento(departamento_id INT)
RETURNS NVARCHAR(100)
AS
BEGIN
    DECLARE nomeDepartamento VARCHAR(100);

    SELECT nomeDepartamento = nome
    FROM departamentos
    WHERE departamento_id = departamento_id;

    RETURN nomeDepartamento;
END;

ELECT dbo.obter_nome_departamento(1); 

--Exercício 4: Função para Obter Título do Empregado
--Crie uma função que, dado o ID de um empregado, retorne o título do cargo desse empregado.

USE empresa_jeferson;
CREATE FUNCTION obter_titulo_empregados(empregados_id INT)
RETURNS VARCHAR(100)
AS
BEGIN
    DECLARE cargo_id INT;
    DECLARE Titulo VARCHAR(100);

    
    SELECT cargo_id = cargo_id
    FROM empregados
    WHERE empregados_id = empregados_id;

    
    SELECT Titulo = Titulo
    FROM cargos
    WHERE cargo_id = cargo_id;

    RETURN Titulo;
END;

SELECT dbo.obter_titulo_empregados(1);

--Exercício 5: Função para Calcular Salário Total de um Departamento
--Crie uma função que, dado o ID de um departamento, retorne o salário total de todos os empregados desse departamento.

USE empresa_jeferson;

CREATE FUNCTION calcular_salario_total_departamento(departamento_id INT)
RETURNS DECIMAL(18, 2)
AS
BEGIN
    DECLARE SalarioTotal DECIMAL(18, 2);

    SELECT SalarioTotal = SUM(SalarioMensal)
    FROM Empregados
    WHERE departamento_id = departamento_id;

    RETURN SalarioTotal;
END;

SELECT dbo.calcular_salario_total_departamento(1); 
